<?php

// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Library of classes/functions for run_simpletests
 *
 * @package    core
 * @subpackage ci
 * @copyright  2011 Eloy Lafuente (http://stronk7.com)
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

defined('MOODLE_INTERNAL') || die();

class cli_text_reporter extends TextReporter {

    function paintNotice($message) { }
}

class cli_html_reporter extends HtmlReporter {

    function paintNotice($message) { }

}

class cli_xml_reporter extends XMLReporter {

    protected $pre;

    function paintNotice($message) { }

    /**
     * Extend default XmlReporter to record & report time to run each test method
     */

    function paintMethodStart($test_name) {
        $this->pre = microtime();
        parent::paintMethodStart($test_name);
    }

    function paintMethodEnd($test_name) {
        $post = microtime();
        if ($this->pre != null) {
            $duration = $post - $this->pre;
            // how can post time be less than pre?  assuming zero if this happens..
            if ($post < $this->pre) {
                $duration = 0;
            }
            if (method_exists($this, 'getIndent')) { // Simpletest 1.1.0 and upwards (Moodle 2.3 and upwards)
                print $this->getIndent(1);
            } else if (method_exists($this, '_getIndent')) { // Simpletest before 1.1.0 (before Moodle 2.3)
                print $this->_getIndent(1);
            }
            print "<time>$duration</time>\n";
        }
        parent::paintMethodEnd($test_name);
        $this->pre = null;
    }
}

class cli_xunit_reporter extends cli_xml_reporter {

    // xUnit format: https://svn.jenkins-ci.org/trunk/hudson/dtkit/dtkit-format/dtkit-junit-model/src/main/resources/com/thalesgroup/dtkit/junit/model/xsd/junit-4.xsd
    // originally: https://techknowhow.library.emory.edu/blogs/rsutton/2009/07/24/using-hudson-php-simpletest

    public $simpletest2xunit =<<<EOT
<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0">

  <!-- convert xml output generated by simpletest xml into junit xml format -->
  <xsl:output method="xml" indent="yes"/>

  <xsl:template match="/">
    <xsl:apply-templates select="run/group"/>
  </xsl:template>

  <xsl:template match="run/group">
    <testsuites>
      <xsl:attribute name="name"><xsl:value-of select="name"/></xsl:attribute>
      <xsl:attribute name="time"><xsl:value-of select="sum(.//time)"/></xsl:attribute>
      <xsl:attribute name="tests"><xsl:value-of select="count(.//test)"/></xsl:attribute>
      <xsl:attribute name="failures"><xsl:value-of select="count(.//fail)"/></xsl:attribute>
      <xsl:attribute name="errors"><xsl:value-of select="count(.//exception)"/></xsl:attribute>
      <xsl:comment>Totals: <xsl:value-of select="count(.//test)"/> testcases, <xsl:value-of select="count(.//fail)"/> failed, <xsl:value-of select="count(.//exception)"/> exceptions, <xsl:value-of select="count(.//skip)"/> skipped, <xsl:value-of select="count(.//pass)+count(.//fail)+count(.//exception)+count(.//skip)"/> assertions</xsl:comment>
      <xsl:apply-templates select=".//group"/>
    </testsuites>
  </xsl:template>

  <xsl:template match="group">
    <testsuite>
      <xsl:attribute name="name"><xsl:value-of select="name"/></xsl:attribute>
      <xsl:attribute name="tests"><xsl:value-of select="count(.//test)"/></xsl:attribute>
      <xsl:attribute name="failures"><xsl:value-of select="count(.//fail)"/></xsl:attribute>
      <xsl:attribute name="errors"><xsl:value-of select="count(.//exception)"/></xsl:attribute>
      <xsl:attribute name="time"><xsl:value-of select="sum(.//time)"/></xsl:attribute>
      <xsl:attribute name="skipped"><xsl:value-of select="count(.//skip)"/></xsl:attribute>
      <xsl:apply-templates select=".//case/test"/>
      <!-- simpletest reports skipped tests @ group (testsuite) level instead of
           doing so @ cae (testcase) level, so we need to "invent" one fake testcase :-( -->
      <xsl:apply-templates select=".//skip"/>
      <xsl:copy-of select="//system-err"/>
    </testsuite>
  </xsl:template>

  <xsl:template match="case/test">
    <testcase>
      <xsl:attribute name="name"><xsl:value-of select="name"/></xsl:attribute>
      <xsl:attribute name="assertions"><xsl:value-of select="count(.//pass)+count(.//fail)+count(.//exception)+count(.//skip)"/></xsl:attribute>
      <xsl:attribute name="time"><xsl:value-of select="time"/></xsl:attribute>
      <xsl:attribute name="classname"><xsl:value-of select="../name"/></xsl:attribute>
      <xsl:apply-templates select="fail"/>
      <xsl:apply-templates select="exception"/>
    </testcase>
  </xsl:template>

  <xsl:template match="skip">
    <testcase>
      <xsl:attribute name="name"><xsl:value-of select="../name"/></xsl:attribute>
      <xsl:attribute name="classname">Attention: skipped_testcase!</xsl:attribute>
      <skipped>
        <xsl:copy-of select="../skip"/>
      </skipped>
    </testcase>
  </xsl:template>

  <xsl:template match="fail">
    <failure><xsl:attribute name="message"><xsl:value-of select="."/></xsl:attribute>
    <!-- content is for stacktrace; not available / broken out by simpletest -->
    </failure>
  </xsl:template>

  <xsl:template match="exception">
    <!-- assuming same format as fail -->
    <error><xsl:attribute name="message"><xsl:value-of select="."/></xsl:attribute>
    <!-- content is for stacktrace; not available / broken out by simpletest -->
    </error>
  </xsl:template>

</xsl:stylesheet>
EOT;

}

class cli_group_test extends AutoGroupTest {

    public $ignorefolders = array();

}
